// This file is generated by Gradle task generateContextFunctions please do not edit it manually
package dev.schlaubi.stdx.core

import kotlin.contracts.InvocationKind
import kotlin.contracts.contract

/**
 * Lambda with 1 context receivers.
 *
 * @see context
 */
public typealias ContextReceiver1<A, ReturnType> = A.() -> ReturnType

/**
 * Lambda with 2 context receivers.
 *
 * @see context
 */
public typealias ContextReceiver2<A, B, ReturnType> = context(B) A.() -> ReturnType

/**
 * Lambda with 3 context receivers.
 *
 * @see context
 */
public typealias ContextReceiver3<A, B, C, ReturnType> = context(B, C) A.() -> ReturnType

/**
 * Lambda with 4 context receivers.
 *
 * @see context
 */
public typealias ContextReceiver4<A, B, C, D, ReturnType> = context(B, C, D) A.() -> ReturnType

/**
 * Lambda with 5 context receivers.
 *
 * @see context
 */
public typealias ContextReceiver5<A, B, C, D, E, ReturnType> = context(B, C, D, E) A.() -> ReturnType

/**
 * Lambda with 6 context receivers.
 *
 * @see context
 */
public typealias ContextReceiver6<A, B, C, D, E, F, ReturnType> = context(B, C, D, E, F) A.() -> ReturnType

/**
 * Lambda with 7 context receivers.
 *
 * @see context
 */
public typealias ContextReceiver7<A, B, C, D, E, F, G, ReturnType> = context(B, C, D, E, F, G) A.() -> ReturnType

/**
 * Lambda with 8 context receivers.
 *
 * @see context
 */
public typealias ContextReceiver8<A, B, C, D, E, F, G, H, ReturnType> =
    context(B, C, D, E, F, G, H) A.() -> ReturnType

/**
 * Lambda with 9 context receivers.
 *
 * @see context
 */
public typealias ContextReceiver9<A, B, C, D, E, F, G, H, I, ReturnType> =
    context(B, C, D, E, F, G, H, I) A.() -> ReturnType

/**
 * Lambda with 10 context receivers.
 *
 * @see context
 */
public typealias ContextReceiver10<A, B, C, D, E, F, G, H, I, J, ReturnType> =
    context(B, C, D, E, F, G, H, I, J) A.() -> ReturnType

/**
 * Lambda with 11 context receivers.
 *
 * @see context
 */
public typealias ContextReceiver11<A, B, C, D, E, F, G, H, I, J, K, ReturnType> =
    context(B, C, D, E, F, G, H, I, J, K) A.() -> ReturnType

/**
 * Lambda with 12 context receivers.
 *
 * @see context
 */
public typealias ContextReceiver12<A, B, C, D, E, F, G, H, I, J, K, L, ReturnType> =
    context(B, C, D, E, F, G, H, I, J, K, L) A.() -> ReturnType

/**
 * Lambda with 13 context receivers.
 *
 * @see context
 */
public typealias ContextReceiver13<A, B, C, D, E, F, G, H, I, J, K, L, M, ReturnType> =
    context(B, C, D, E, F, G, H, I, J, K, L, M) A.() -> ReturnType

/**
 * Lambda with 14 context receivers.
 *
 * @see context
 */
public typealias ContextReceiver14<A, B, C, D, E, F, G, H, I, J, K, L, M, N, ReturnType> =
    context(B, C, D, E, F, G, H, I, J, K, L, M, N) A.() -> ReturnType

/**
 * Lambda with 15 context receivers.
 *
 * @see context
 */
public typealias ContextReceiver15<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, ReturnType> =
    context(B, C, D, E, F, G, H, I, J, K, L, M, N, O) A.() -> ReturnType

/**
 * Lambda with 16 context receivers.
 *
 * @see context
 */
public typealias ContextReceiver16<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, ReturnType> =
    context(B, C, D, E, F, G, H, I, J, K, L, M, N, O, P) A.() -> ReturnType

/**
 * Lambda with 17 context receivers.
 *
 * @see context
 */
public typealias ContextReceiver17<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, ReturnType> =
    context(B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q) A.() -> ReturnType

/**
 * Lambda with 18 context receivers.
 *
 * @see context
 */
public typealias ContextReceiver18<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, ReturnType>
    = context(B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R) A.() -> ReturnType

/**
 * Lambda with 19 context receivers.
 *
 * @see context
 */
public typealias ContextReceiver19<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S,
    ReturnType> = context(B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S) A.() -> ReturnType

/**
 * Lambda with 20 context receivers.
 *
 * @see context
 */
public typealias ContextReceiver20<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T,
    ReturnType> = context(B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T) A.() -> ReturnType

/**
 * Lambda with 21 context receivers.
 *
 * @see context
 */
public typealias ContextReceiver21<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U,
    ReturnType> = context(B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U) A.() -> ReturnType

/**
 * Lambda with 22 context receivers.
 *
 * @see context
 */
public typealias ContextReceiver22<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V,
    ReturnType> = context(B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V) A.() -> ReturnType

/**
 * Lambda with 23 context receivers.
 *
 * @see context
 */
public typealias ContextReceiver23<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V,
    W, ReturnType> = context(B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W) A.() -> ReturnType

/**
 * Lambda with 24 context receivers.
 *
 * @see context
 */
public typealias ContextReceiver24<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V,
    W, X, ReturnType> =
    context(B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X) A.() -> ReturnType

/**
 * Lambda with 25 context receivers.
 *
 * @see context
 */
public typealias ContextReceiver25<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V,
    W, X, Y, ReturnType> =
    context(B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y) A.() -> ReturnType

/**
 * Lambda with 26 context receivers.
 *
 * @see context
 */
public typealias ContextReceiver26<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V,
    W, X, Y, Z, ReturnType> =
    context(B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z) A.() -> ReturnType

/**
 * Adds [a] to the context of [block] and returns its return value.
 */
public inline fun <A, ReturnType> context(a: A, block: ContextReceiver1<A, ReturnType>):
    ReturnType {
          contract {
      callsInPlace(block, InvocationKind.EXACTLY_ONCE)
  }

  return block.invoke(a)
}

/**
 * Adds [a], [b] to the context of [block] and returns its return value.
 */
public inline fun <A, B, ReturnType> context(
  a: A,
  b: B,
  block: ContextReceiver2<A, B, ReturnType>,
): ReturnType {
          contract {
      callsInPlace(block, InvocationKind.EXACTLY_ONCE)
  }

  return block.invoke(b, a)
}

/**
 * Adds [a], [b], [c] to the context of [block] and returns its return value.
 */
public inline fun <A, B, C, ReturnType> context(
  a: A,
  b: B,
  c: C,
  block: ContextReceiver3<A, B, C, ReturnType>,
): ReturnType {
          contract {
      callsInPlace(block, InvocationKind.EXACTLY_ONCE)
  }

  return block.invoke(b, c, a)
}

/**
 * Adds [a], [b], [c], [d] to the context of [block] and returns its return value.
 */
public inline fun <A, B, C, D, ReturnType> context(
  a: A,
  b: B,
  c: C,
  d: D,
  block: ContextReceiver4<A, B, C, D, ReturnType>,
): ReturnType {
          contract {
      callsInPlace(block, InvocationKind.EXACTLY_ONCE)
  }

  return block.invoke(b, c, d, a)
}

/**
 * Adds [a], [b], [c], [d], [e] to the context of [block] and returns its return value.
 */
public inline fun <A, B, C, D, E, ReturnType> context(
  a: A,
  b: B,
  c: C,
  d: D,
  e: E,
  block: ContextReceiver5<A, B, C, D, E, ReturnType>,
): ReturnType {
          contract {
      callsInPlace(block, InvocationKind.EXACTLY_ONCE)
  }

  return block.invoke(b, c, d, e, a)
}

/**
 * Adds [a], [b], [c], [d], [e], [f] to the context of [block] and returns its return value.
 */
public inline fun <A, B, C, D, E, F, ReturnType> context(
  a: A,
  b: B,
  c: C,
  d: D,
  e: E,
  f: F,
  block: ContextReceiver6<A, B, C, D, E, F, ReturnType>,
): ReturnType {
          contract {
      callsInPlace(block, InvocationKind.EXACTLY_ONCE)
  }

  return block.invoke(b, c, d, e, f, a)
}

/**
 * Adds [a], [b], [c], [d], [e], [f], [g] to the context of [block] and returns its return value.
 */
public inline fun <A, B, C, D, E, F, G, ReturnType> context(
  a: A,
  b: B,
  c: C,
  d: D,
  e: E,
  f: F,
  g: G,
  block: ContextReceiver7<A, B, C, D, E, F, G, ReturnType>,
): ReturnType {
          contract {
      callsInPlace(block, InvocationKind.EXACTLY_ONCE)
  }

  return block.invoke(b, c, d, e, f, g, a)
}

/**
 * Adds [a], [b], [c], [d], [e], [f], [g], [h] to the context of [block] and returns its return
 * value.
 */
public inline fun <A, B, C, D, E, F, G, H, ReturnType> context(
  a: A,
  b: B,
  c: C,
  d: D,
  e: E,
  f: F,
  g: G,
  h: H,
  block: ContextReceiver8<A, B, C, D, E, F, G, H, ReturnType>,
): ReturnType {
          contract {
      callsInPlace(block, InvocationKind.EXACTLY_ONCE)
  }

  return block.invoke(b, c, d, e, f, g, h, a)
}

/**
 * Adds [a], [b], [c], [d], [e], [f], [g], [h], [i] to the context of [block] and returns its return
 * value.
 */
public inline fun <A, B, C, D, E, F, G, H, I, ReturnType> context(
  a: A,
  b: B,
  c: C,
  d: D,
  e: E,
  f: F,
  g: G,
  h: H,
  i: I,
  block: ContextReceiver9<A, B, C, D, E, F, G, H, I, ReturnType>,
): ReturnType {
          contract {
      callsInPlace(block, InvocationKind.EXACTLY_ONCE)
  }

  return block.invoke(b, c, d, e, f, g, h, i, a)
}

/**
 * Adds [a], [b], [c], [d], [e], [f], [g], [h], [i], [j] to the context of [block] and returns its
 * return value.
 */
public inline fun <A, B, C, D, E, F, G, H, I, J, ReturnType> context(
  a: A,
  b: B,
  c: C,
  d: D,
  e: E,
  f: F,
  g: G,
  h: H,
  i: I,
  j: J,
  block: ContextReceiver10<A, B, C, D, E, F, G, H, I, J, ReturnType>,
): ReturnType {
          contract {
      callsInPlace(block, InvocationKind.EXACTLY_ONCE)
  }

  return block.invoke(b, c, d, e, f, g, h, i, j, a)
}

/**
 * Adds [a], [b], [c], [d], [e], [f], [g], [h], [i], [j], [k] to the context of [block] and returns
 * its return value.
 */
public inline fun <A, B, C, D, E, F, G, H, I, J, K, ReturnType> context(
  a: A,
  b: B,
  c: C,
  d: D,
  e: E,
  f: F,
  g: G,
  h: H,
  i: I,
  j: J,
  k: K,
  block: ContextReceiver11<A, B, C, D, E, F, G, H, I, J, K, ReturnType>,
): ReturnType {
          contract {
      callsInPlace(block, InvocationKind.EXACTLY_ONCE)
  }

  return block.invoke(b, c, d, e, f, g, h, i, j, k, a)
}

/**
 * Adds [a], [b], [c], [d], [e], [f], [g], [h], [i], [j], [k], [l] to the context of [block] and
 * returns its return value.
 */
public inline fun <A, B, C, D, E, F, G, H, I, J, K, L, ReturnType> context(
  a: A,
  b: B,
  c: C,
  d: D,
  e: E,
  f: F,
  g: G,
  h: H,
  i: I,
  j: J,
  k: K,
  l: L,
  block: ContextReceiver12<A, B, C, D, E, F, G, H, I, J, K, L, ReturnType>,
): ReturnType {
          contract {
      callsInPlace(block, InvocationKind.EXACTLY_ONCE)
  }

  return block.invoke(b, c, d, e, f, g, h, i, j, k, l, a)
}

/**
 * Adds [a], [b], [c], [d], [e], [f], [g], [h], [i], [j], [k], [l], [m] to the context of [block]
 * and returns its return value.
 */
public inline fun <A, B, C, D, E, F, G, H, I, J, K, L, M, ReturnType> context(
  a: A,
  b: B,
  c: C,
  d: D,
  e: E,
  f: F,
  g: G,
  h: H,
  i: I,
  j: J,
  k: K,
  l: L,
  m: M,
  block: ContextReceiver13<A, B, C, D, E, F, G, H, I, J, K, L, M, ReturnType>,
): ReturnType {
          contract {
      callsInPlace(block, InvocationKind.EXACTLY_ONCE)
  }

  return block.invoke(b, c, d, e, f, g, h, i, j, k, l, m, a)
}

/**
 * Adds [a], [b], [c], [d], [e], [f], [g], [h], [i], [j], [k], [l], [m], [n] to the context of
 * [block] and returns its return value.
 */
public inline fun <A, B, C, D, E, F, G, H, I, J, K, L, M, N, ReturnType> context(
  a: A,
  b: B,
  c: C,
  d: D,
  e: E,
  f: F,
  g: G,
  h: H,
  i: I,
  j: J,
  k: K,
  l: L,
  m: M,
  n: N,
  block: ContextReceiver14<A, B, C, D, E, F, G, H, I, J, K, L, M, N, ReturnType>,
): ReturnType {
          contract {
      callsInPlace(block, InvocationKind.EXACTLY_ONCE)
  }

  return block.invoke(b, c, d, e, f, g, h, i, j, k, l, m, n, a)
}

/**
 * Adds [a], [b], [c], [d], [e], [f], [g], [h], [i], [j], [k], [l], [m], [n], [o] to the context of
 * [block] and returns its return value.
 */
public inline fun <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, ReturnType> context(
  a: A,
  b: B,
  c: C,
  d: D,
  e: E,
  f: F,
  g: G,
  h: H,
  i: I,
  j: J,
  k: K,
  l: L,
  m: M,
  n: N,
  o: O,
  block: ContextReceiver15<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, ReturnType>,
): ReturnType {
          contract {
      callsInPlace(block, InvocationKind.EXACTLY_ONCE)
  }

  return block.invoke(b, c, d, e, f, g, h, i, j, k, l, m, n, o, a)
}

/**
 * Adds [a], [b], [c], [d], [e], [f], [g], [h], [i], [j], [k], [l], [m], [n], [o], [p] to the
 * context of [block] and returns its return value.
 */
public inline fun <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, ReturnType> context(
  a: A,
  b: B,
  c: C,
  d: D,
  e: E,
  f: F,
  g: G,
  h: H,
  i: I,
  j: J,
  k: K,
  l: L,
  m: M,
  n: N,
  o: O,
  p: P,
  block: ContextReceiver16<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, ReturnType>,
): ReturnType {
          contract {
      callsInPlace(block, InvocationKind.EXACTLY_ONCE)
  }

  return block.invoke(b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, a)
}

/**
 * Adds [a], [b], [c], [d], [e], [f], [g], [h], [i], [j], [k], [l], [m], [n], [o], [p], [q] to the
 * context of [block] and returns its return value.
 */
public inline fun <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, ReturnType> context(
  a: A,
  b: B,
  c: C,
  d: D,
  e: E,
  f: F,
  g: G,
  h: H,
  i: I,
  j: J,
  k: K,
  l: L,
  m: M,
  n: N,
  o: O,
  p: P,
  q: Q,
  block: ContextReceiver17<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, ReturnType>,
): ReturnType {
          contract {
      callsInPlace(block, InvocationKind.EXACTLY_ONCE)
  }

  return block.invoke(b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, a)
}

/**
 * Adds [a], [b], [c], [d], [e], [f], [g], [h], [i], [j], [k], [l], [m], [n], [o], [p], [q], [r] to
 * the context of [block] and returns its return value.
 */
public inline fun <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, ReturnType> context(
  a: A,
  b: B,
  c: C,
  d: D,
  e: E,
  f: F,
  g: G,
  h: H,
  i: I,
  j: J,
  k: K,
  l: L,
  m: M,
  n: N,
  o: O,
  p: P,
  q: Q,
  r: R,
  block: ContextReceiver18<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, ReturnType>,
): ReturnType {
          contract {
      callsInPlace(block, InvocationKind.EXACTLY_ONCE)
  }

  return block.invoke(b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, a)
}

/**
 * Adds [a], [b], [c], [d], [e], [f], [g], [h], [i], [j], [k], [l], [m], [n], [o], [p], [q], [r],
 * [s] to the context of [block] and returns its return value.
 */
public inline fun <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, ReturnType> context(
  a: A,
  b: B,
  c: C,
  d: D,
  e: E,
  f: F,
  g: G,
  h: H,
  i: I,
  j: J,
  k: K,
  l: L,
  m: M,
  n: N,
  o: O,
  p: P,
  q: Q,
  r: R,
  s: S,
  block: ContextReceiver19<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, ReturnType>,
): ReturnType {
          contract {
      callsInPlace(block, InvocationKind.EXACTLY_ONCE)
  }

  return block.invoke(b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, a)
}

/**
 * Adds [a], [b], [c], [d], [e], [f], [g], [h], [i], [j], [k], [l], [m], [n], [o], [p], [q], [r],
 * [s], [t] to the context of [block] and returns its return value.
 */
public inline fun <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, ReturnType> context(
  a: A,
  b: B,
  c: C,
  d: D,
  e: E,
  f: F,
  g: G,
  h: H,
  i: I,
  j: J,
  k: K,
  l: L,
  m: M,
  n: N,
  o: O,
  p: P,
  q: Q,
  r: R,
  s: S,
  t: T,
  block: ContextReceiver20<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, ReturnType>,
): ReturnType {
          contract {
      callsInPlace(block, InvocationKind.EXACTLY_ONCE)
  }

  return block.invoke(b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, a)
}

/**
 * Adds [a], [b], [c], [d], [e], [f], [g], [h], [i], [j], [k], [l], [m], [n], [o], [p], [q], [r],
 * [s], [t], [u] to the context of [block] and returns its return value.
 */
public inline fun <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, ReturnType>
    context(
  a: A,
  b: B,
  c: C,
  d: D,
  e: E,
  f: F,
  g: G,
  h: H,
  i: I,
  j: J,
  k: K,
  l: L,
  m: M,
  n: N,
  o: O,
  p: P,
  q: Q,
  r: R,
  s: S,
  t: T,
  u: U,
  block: ContextReceiver21<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, ReturnType>,
): ReturnType {
          contract {
      callsInPlace(block, InvocationKind.EXACTLY_ONCE)
  }

  return block.invoke(b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, a)
}

/**
 * Adds [a], [b], [c], [d], [e], [f], [g], [h], [i], [j], [k], [l], [m], [n], [o], [p], [q], [r],
 * [s], [t], [u], [v] to the context of [block] and returns its return value.
 */
public inline fun <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, ReturnType>
    context(
  a: A,
  b: B,
  c: C,
  d: D,
  e: E,
  f: F,
  g: G,
  h: H,
  i: I,
  j: J,
  k: K,
  l: L,
  m: M,
  n: N,
  o: O,
  p: P,
  q: Q,
  r: R,
  s: S,
  t: T,
  u: U,
  v: V,
  block: ContextReceiver22<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, ReturnType>,
): ReturnType {
          contract {
      callsInPlace(block, InvocationKind.EXACTLY_ONCE)
  }

  return block.invoke(b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, a)
}

/**
 * Adds [a], [b], [c], [d], [e], [f], [g], [h], [i], [j], [k], [l], [m], [n], [o], [p], [q], [r],
 * [s], [t], [u], [v], [w] to the context of [block] and returns its return value.
 */
public inline fun <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, ReturnType>
    context(
  a: A,
  b: B,
  c: C,
  d: D,
  e: E,
  f: F,
  g: G,
  h: H,
  i: I,
  j: J,
  k: K,
  l: L,
  m: M,
  n: N,
  o: O,
  p: P,
  q: Q,
  r: R,
  s: S,
  t: T,
  u: U,
  v: V,
  w: W,
  block: ContextReceiver23<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, ReturnType>,
): ReturnType {
          contract {
      callsInPlace(block, InvocationKind.EXACTLY_ONCE)
  }

  return block.invoke(b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, a)
}

/**
 * Adds [a], [b], [c], [d], [e], [f], [g], [h], [i], [j], [k], [l], [m], [n], [o], [p], [q], [r],
 * [s], [t], [u], [v], [w], [x] to the context of [block] and returns its return value.
 */
public inline fun <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X,
    ReturnType> context(
  a: A,
  b: B,
  c: C,
  d: D,
  e: E,
  f: F,
  g: G,
  h: H,
  i: I,
  j: J,
  k: K,
  l: L,
  m: M,
  n: N,
  o: O,
  p: P,
  q: Q,
  r: R,
  s: S,
  t: T,
  u: U,
  v: V,
  w: W,
  x: X,
  block: ContextReceiver24<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, ReturnType>,
): ReturnType {
          contract {
      callsInPlace(block, InvocationKind.EXACTLY_ONCE)
  }

  return block.invoke(b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, a)
}

/**
 * Adds [a], [b], [c], [d], [e], [f], [g], [h], [i], [j], [k], [l], [m], [n], [o], [p], [q], [r],
 * [s], [t], [u], [v], [w], [x], [y] to the context of [block] and returns its return value.
 */
public inline fun <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y,
    ReturnType> context(
  a: A,
  b: B,
  c: C,
  d: D,
  e: E,
  f: F,
  g: G,
  h: H,
  i: I,
  j: J,
  k: K,
  l: L,
  m: M,
  n: N,
  o: O,
  p: P,
  q: Q,
  r: R,
  s: S,
  t: T,
  u: U,
  v: V,
  w: W,
  x: X,
  y: Y,
  block: ContextReceiver25<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, ReturnType>,
): ReturnType {
          contract {
      callsInPlace(block, InvocationKind.EXACTLY_ONCE)
  }

  return block.invoke(b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, a)
}

/**
 * Adds [a], [b], [c], [d], [e], [f], [g], [h], [i], [j], [k], [l], [m], [n], [o], [p], [q], [r],
 * [s], [t], [u], [v], [w], [x], [y], [z] to the context of [block] and returns its return value.
 */
public inline fun <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z,
    ReturnType> context(
  a: A,
  b: B,
  c: C,
  d: D,
  e: E,
  f: F,
  g: G,
  h: H,
  i: I,
  j: J,
  k: K,
  l: L,
  m: M,
  n: N,
  o: O,
  p: P,
  q: Q,
  r: R,
  s: S,
  t: T,
  u: U,
  v: V,
  w: W,
  x: X,
  y: Y,
  z: Z,
  block: ContextReceiver26<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, ReturnType>,
): ReturnType {
          contract {
      callsInPlace(block, InvocationKind.EXACTLY_ONCE)
  }

  return block.invoke(b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a)
}
