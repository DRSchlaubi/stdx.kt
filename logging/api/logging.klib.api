// Klib ABI Dump
// Targets: [js, linuxX64, macosX64, mingwX64, wasmJs, wasmWasi]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <dev.schlaubi:logging>
final inline fun (io.github.oshai.kotlinlogging/KLogger).dev.schlaubi.stdx.logging/debugInlined(kotlin/Function0<kotlin/Any?>) // dev.schlaubi.stdx.logging/debugInlined|debugInlined@io.github.oshai.kotlinlogging.KLogger(kotlin.Function0<kotlin.Any?>){}[0]
final inline fun (io.github.oshai.kotlinlogging/KLogger).dev.schlaubi.stdx.logging/debugInlined(kotlin/Throwable, kotlin/Function0<kotlin/Any?>) // dev.schlaubi.stdx.logging/debugInlined|debugInlined@io.github.oshai.kotlinlogging.KLogger(kotlin.Throwable;kotlin.Function0<kotlin.Any?>){}[0]
final inline fun (io.github.oshai.kotlinlogging/KLogger).dev.schlaubi.stdx.logging/errorInlined(kotlin/Function0<kotlin/Any?>) // dev.schlaubi.stdx.logging/errorInlined|errorInlined@io.github.oshai.kotlinlogging.KLogger(kotlin.Function0<kotlin.Any?>){}[0]
final inline fun (io.github.oshai.kotlinlogging/KLogger).dev.schlaubi.stdx.logging/errorInlined(kotlin/Throwable, kotlin/Function0<kotlin/Any?>) // dev.schlaubi.stdx.logging/errorInlined|errorInlined@io.github.oshai.kotlinlogging.KLogger(kotlin.Throwable;kotlin.Function0<kotlin.Any?>){}[0]
final inline fun (io.github.oshai.kotlinlogging/KLogger).dev.schlaubi.stdx.logging/infoInlined(kotlin/Function0<kotlin/Any?>) // dev.schlaubi.stdx.logging/infoInlined|infoInlined@io.github.oshai.kotlinlogging.KLogger(kotlin.Function0<kotlin.Any?>){}[0]
final inline fun (io.github.oshai.kotlinlogging/KLogger).dev.schlaubi.stdx.logging/infoInlined(kotlin/Throwable, kotlin/Function0<kotlin/Any?>) // dev.schlaubi.stdx.logging/infoInlined|infoInlined@io.github.oshai.kotlinlogging.KLogger(kotlin.Throwable;kotlin.Function0<kotlin.Any?>){}[0]
final inline fun (io.github.oshai.kotlinlogging/KLogger).dev.schlaubi.stdx.logging/traceInlined(kotlin/Function0<kotlin/Any?>) // dev.schlaubi.stdx.logging/traceInlined|traceInlined@io.github.oshai.kotlinlogging.KLogger(kotlin.Function0<kotlin.Any?>){}[0]
final inline fun (io.github.oshai.kotlinlogging/KLogger).dev.schlaubi.stdx.logging/traceInlined(kotlin/Throwable, kotlin/Function0<kotlin/Any?>) // dev.schlaubi.stdx.logging/traceInlined|traceInlined@io.github.oshai.kotlinlogging.KLogger(kotlin.Throwable;kotlin.Function0<kotlin.Any?>){}[0]
final inline fun (io.github.oshai.kotlinlogging/KLogger).dev.schlaubi.stdx.logging/warnInlined(kotlin/Function0<kotlin/Any?>) // dev.schlaubi.stdx.logging/warnInlined|warnInlined@io.github.oshai.kotlinlogging.KLogger(kotlin.Function0<kotlin.Any?>){}[0]
final inline fun (io.github.oshai.kotlinlogging/KLogger).dev.schlaubi.stdx.logging/warnInlined(kotlin/Throwable, kotlin/Function0<kotlin/Any?>) // dev.schlaubi.stdx.logging/warnInlined|warnInlined@io.github.oshai.kotlinlogging.KLogger(kotlin.Throwable;kotlin.Function0<kotlin.Any?>){}[0]
