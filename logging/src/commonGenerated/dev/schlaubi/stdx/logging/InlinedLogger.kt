// This file is generated by Gradle task generateLoggerFunctions please do not edit it manually
package dev.schlaubi.stdx.logging

import kotlin.Throwable
import kotlin.Unit
import mu.KLogger

/**
 * Inline version of [KLogger.debug] so it can call suspend functions
 */
public expect inline fun KLogger.debugInlined(message: LazyLogMessage): Unit

/**
 * Inline version of [KLogger.debug] so it can call suspend functions
 */
public expect inline fun KLogger.debugInlined(throwable: Throwable, message: LazyLogMessage): Unit

/**
 * Inline version of [KLogger.trace] so it can call suspend functions
 */
public expect inline fun KLogger.traceInlined(message: LazyLogMessage): Unit

/**
 * Inline version of [KLogger.trace] so it can call suspend functions
 */
public expect inline fun KLogger.traceInlined(throwable: Throwable, message: LazyLogMessage): Unit

/**
 * Inline version of [KLogger.error] so it can call suspend functions
 */
public expect inline fun KLogger.errorInlined(message: LazyLogMessage): Unit

/**
 * Inline version of [KLogger.error] so it can call suspend functions
 */
public expect inline fun KLogger.errorInlined(throwable: Throwable, message: LazyLogMessage): Unit

/**
 * Inline version of [KLogger.info] so it can call suspend functions
 */
public expect inline fun KLogger.infoInlined(message: LazyLogMessage): Unit

/**
 * Inline version of [KLogger.info] so it can call suspend functions
 */
public expect inline fun KLogger.infoInlined(throwable: Throwable, message: LazyLogMessage): Unit

/**
 * Inline version of [KLogger.warn] so it can call suspend functions
 */
public expect inline fun KLogger.warnInlined(message: LazyLogMessage): Unit

/**
 * Inline version of [KLogger.warn] so it can call suspend functions
 */
public expect inline fun KLogger.warnInlined(throwable: Throwable, message: LazyLogMessage): Unit
