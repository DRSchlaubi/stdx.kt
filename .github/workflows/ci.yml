name: CI
on:
  push:
  pull_request:

permissions:
  id-token: write
  pages: write

jobs:
  test:
    runs-on: ubuntu-latest
    name: Run tests and linter
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '25'
      - uses: gradle/actions/setup-gradle@v4
      - name: Validate Code
        run: ./gradlew check -x checkLegacyAbi
  validate_binary_compatibility:
    runs-on: ubuntu-latest
    name: Run binary compatibility validator
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '25'
      - uses: gradle/actions/setup-gradle@v4
      - name: Validate Binary Compatibility
        run: ./gradlew checkLegacyAbi
  deploy_to_maven:
    name: Deploy to Maven repo
    runs-on: ubuntu-latest
    needs: [test, validate_binary_compatibility]
    if: github.ref == 'refs/heads/main'
    env:
      ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_USER }}
      ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_KEY }}
      ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.signingKey }}
      ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.signingPassword }}
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '25'
      - uses: gradle/gradle-build-action@v2
      - name: Publish Code
        run: ./gradlew publishToMavenCentral
  build_docs:
    name: Deploy docs
    runs-on: ubuntu-latest
    needs: [test, validate_binary_compatibility]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '25'
      - uses: gradle/gradle-build-action@v2
      - name: Generate Docs
        run: ./gradlew :dokkaGenerateHtml
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: build/dokka/html
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [ build_docs ]
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
