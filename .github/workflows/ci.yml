name: CI
on:
  push:
  pull_request:

jobs:
  validate:
    name: Validate Gradle Wrapper
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: gradle/wrapper-validation-action@v1
        name: Validate Gradle Wrapper
  test:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    needs: validate
    name: Run tests and linter
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '19'
      - uses: gradle/gradle-build-action@v2
        name: Validate Code
        with:
          arguments: classes check -x apiCheck
  validate_binary_compatibility:
    runs-on: ubuntu-20.04
    needs: validate
    name: Run binary compatibility validator
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '19'
      - uses: gradle/gradle-build-action@v2
        name: Validate Binary Compatibility
        with:
          arguments: apiCheck
  deploy_to_maven:
    name: Deploy to Maven repo
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    needs: [test, validate_binary_compatibility]
    if: github.ref == 'refs/heads/main'
    env:
      SONATYPE_KEY: ${{ secrets.SONATYPE_KEY }}
      SONATYPE_USER: ${{ secrets.SONATYPE_USER }}
      ORG_GRADLE_PROJECT_signingKey: ${{ secrets.signingKey }}
      ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.signingPassword }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '19'
      - uses: gradle/gradle-build-action@v2
        name: Publish Code
        with:
          arguments: publishPlatformPublications -x check
  deploy_docs:
    name: Deploy docs
    runs-on: ubuntu-20.04
    needs: [test, validate_binary_compatibility]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '19'
      - uses: gradle/gradle-build-action@v2
        name: Generate Docs
        with:
          arguments: dokkaHtmlMultiModule
      - name: Deploy Docs
        uses: JamesIves/github-pages-deploy-action@v4.2.5
        with:
          branch: gh-pages
          folder: docs
          clean: true
          clean-exclude: |
            .nojekyll
            CNAME
